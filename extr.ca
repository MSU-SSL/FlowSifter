HTTP1 -> HTTP_START1 [bodychunked := 0; bodylength := 0] 
      	 HEADERS1 CRLF BODY1 HTTP1;
HTTP1 -> ;

#Response
HTTP_START1 -> VERSION SP STATUS SP TEXT CRLF;
#Request
HTTP_START1 99 -> token(TOKEN) SP token(URL) SP VERSION CRLF;

HEADERS1 -> HEADER1 CRLF HEADERS1 ;
HEADERS1 -> ;

HEADER1 -> token( /(?i:Content-length):\s*/ ) // [bodylength := getnum(); cv := token(-1) ] ;
HEADER1 99 -> token( /[^\x00-\x1f()<>@,;:\\"\/[]?={} ]+:\s*/ ) token(VALUE) ;

HEADER1 -> /(?i:Transfer-Encoding):\s*chunked/ token(//) token(//) // [ bodychunked := 1 ] ;
HEADER1 80 -> token( /(?i:Transfer-Encoding):\s*/ ) token( TEXT ) ;


#body types
## Content length known
BODY1 [ bodylength > 0 ] -> // [bodylength := skip(bodylength)];
## Chunked body
BODY1 [ bodychunked == 1 ] -> CHUNK_BODY1;
## HTTP/1.0, unknown bodylength: skip rest of flow
BODY1 [ bodychunked == 0; httpversion == 0; bodylength == 0 ] -> // [bodylength := skip(9999999)];
## HTTP/1.1, unknown bodylength, assume = 0
BODY1 [ bodychunked == 0; httpversion == 1; bodylength == 0 ] -> ;

CHUNK_BODY1 -> // [chunksize := gethex()] CHUNK_EXTENSION CRLF [chunksize := skip(chunksize)] CRLF CHUNK_BODY1;
CHUNK_BODY1 10 -> /0/ CRLF HEADERS1 CRLF;
CHUNK_BODY1 10 -> /0;/ TEXT CRLF HEADERS1 CRLF;
